@using System.Security.Claims
@model GetPasteVM

<div class="h-100 w-100">
    <div class="d-flex justify-content-center">
        <div>

            <div class="mb-4 ms-2 col">
                <span class="filter-text">Author:</span>
                <a class="filter-text ms-1 text-decoration-none text-black" href="#">@Model.UserName</a>
            </div>

            @* Title *@
            <div class="mb-1 ms-2">
                <span class="filter-text">Title</span>
            </div>

            <div class="mb-3">
                <div class="input-group input-group-sm mb-3 title_input roboto-regular">
                    <p type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" id="title">@Model.Title</p>
                </div>
            </div>

            @* Paste Data *@

            <div class="row m-0 pb-1 d-flex justify-content-center">
                <div class="col p-0 text-center">
                    <span class="roboto-regular">@Model.Category.CategoryName</span>
                </div>

                <div class="col p-0 text-center title-item_border">
                    <span class="roboto-regular">@Model.Type.TypeName</span>
                </div>

                @if (Model.IsPublic)
                {
                    <div class="col p-0 text-center">
                        <span class="roboto-regular public">Public</span>
                    </div>
                }
                else
                {
                    <div class="col p-0 text-center">
                        <span class="roboto-regular private">Private</span>
                    </div>
                }

                <div class="col p-0 text-center title-item_border">
                    <i class="fa-regular fa-calendar-check me-1"></i>
                    <span class="d-inline-block" tabindex="0" data-bs-toggle="tooltip" title="@Model.CreateAt">
                        <span class="roboto-regular">@Model.CreateAt.ToString("dd.MM.yyyy")</span>
                    </span>
                </div>

                <div class="col p-0 text-center">
                    <i class="fa-regular fa-clock me-1"></i>
                    @if (Model.TimeRemaining.Days != 0)
                    {
                        <span class="roboto-regular text-nowrap">@Model.TimeRemaining.Days d.</span>
                    }
                    else if (Model.TimeRemaining.Hours != 0)
                    {
                        <span class="roboto-regular text-nowrap">@Model.TimeRemaining.Hours h.</span>
                    }

                    else if (Model.TimeRemaining.Minutes != 0)
                    {
                        <span class="roboto-regular text-nowrap">@Model.TimeRemaining.Minutes m.</span>
                    }
                    else if (Model.TimeRemaining.Seconds != 0)
                    {
                        <span class="roboto-regular text-nowrap">@Model.TimeRemaining.Seconds s.</span>
                    }
                </div>

                <div class="col p-0 text-center title-item_border">
                    <span class="roboto-regular">8</span>
                    <i class="fa-regular fa-thumbs-up ms-1"></i>
                </div>

                <div class="col p-0 text-center">
                    <a id="downloadTxtLink" class="me-2 link-dark href-txt" href="#">Download .txt</a>
                </div>
            </div>

            @* Pasts Body *@
            <div class="mb-3 bg-white details-body text-menu p-1" style="word-wrap: break-word;">
                @Html.Raw(Model.Body)
            </div>



            @* Like/Dislike Share Report *@
            <div class="row mb-5">

                <button class="col like-btn btn-outline-secondary mt-1">
                    <i class="fa-regular fa-thumbs-up"></i>
                </button>

                <button class="col dislike-btn btn-outline-secondary mt-1">
                    <i class="fa-regular fa-thumbs-down"></i>
                </button>

                <div class="col p-0">
                    <button class="btn btn-outline-info share-btn roboto-regular" type="submit" onclick="copyCurrentURL()">Share</button>
                </div>

                @if (User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier).Value == Model.UserId.ToString())
                {
                    <form asp-controller="Paste" method="get" class="col p-0 text-end me-3">
                        <button asp-route-id="@Model.Id" asp-action="Edit" class="btn btn-primary roboto-regular edit-btn" type="submit">Edit</button>
                        <button asp-route-id="@Model.Id" asp-action="Delete" class="btn btn-danger roboto-regular delete-btn" type="submit">Delete</button>
                    </form>
                }
                else if (User.IsInRole("Admin"))
                {
                    <form asp-controller="Paste" method="get" class="col p-0 text-end me-3">
                        <button asp-route-id="@Model.Id" asp-action="Delete" class="btn btn-danger roboto-regular delete-btn" type="submit">Delete</button>
                    </form>
                }
                else
                {
                    <div class="col p-0 text-end me-3">
                        <button class="btn report-btn btn-outline-danger roboto-regular" type="submit">Report</button>
                    </div>
                }
            </div>

            @* Comments *@
            @Html.Partial("_CommentForm", new CommentVM { PasteId = Model.Id })

            <div class="mt-5">
                <label class="form-label filter-text ms-2">Comments</label>
                <div class="bg-white comments p-2">

                    @if (Model.Comments.Any())
                    {
                        @foreach (var item in Model.Comments)
                        {
                            <div class="row">
                                <div>
                                    <label class="filter-text ms-2">@item.UserName</label>
                                    <label class="ms-2">@item.CreateAt.Date.ToString("d")</label>
                                </div>
                                <div class="comments-item">
                                    @item.Body
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <span>Comment list is empty</span>
                    }
                </div>
                @if (Model.Comments.Count() > 10)
                {
                    <div class="text-center mt-2">
                        <a asp-controller="Comment" asp-action="Comments" asp-route-pasteId="@Model.Id" class="text-decoration-underline text-dark">Show more...</a>
                    </div>
                }
            </div>
        </div>

    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function stripHtmlTags(html) {
            var doc = new DOMParser().parseFromString(html, 'text/html');
            return doc.body.textContent || "";
        }

        function downloadTxtFile() {
            var htmlContent = '@Html.Raw(Model.Body)';
            var plainTextContent = stripHtmlTags(htmlContent);
            var title = document.getElementById('title').innerText.trim();
            var blob = new Blob([plainTextContent], { type: 'text/plain' });
            var a = document.createElement("a");
            var url = URL.createObjectURL(blob);
            a.href = url;
            a.download = title + '.txt';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }

        document.getElementById('downloadTxtLink').addEventListener('click', function (event) {
            event.preventDefault();
            downloadTxtFile();
        });

        function copyCurrentURL() {
            var currentURL = new URL(window.location.href);
            currentURL.searchParams.delete('password');
            var urlWithoutPassword = currentURL.href;
            var tempInput = document.createElement("input");
            tempInput.value = urlWithoutPassword;
            document.body.appendChild(tempInput);
            tempInput.select();
            document.execCommand("copy");
            document.body.removeChild(tempInput);
            alert("Link copied");
        }
    </script>
}
